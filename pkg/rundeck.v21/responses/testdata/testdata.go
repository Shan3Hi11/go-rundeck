// Code generated by go-bindata.
// sources:
// acl.json
// bulk_delete_executions.json
// bulk_job_delete.json
// bulk_toggle_execution.json
// bulk_toggle_schedule.json
// config_item.json
// execution_adhoc.json
// execution_input_files.json
// execution.json
// executions.json
// execution_state.json
// failed_acl_validation.json
// history.json
// imported_job.json
// incomplete_logstorage_executions.json
// job_info.json
// job_metadata.json
// job_option_upload.json
// jobs.json
// key_metadata.json
// list_keys.json
// list_projects.json
// logstorage.json
// project_archive_export_async.json
// project_archive_import_failed.json
// project_archive_import.json
// project_info.json
// resource.json
// resources.json
// systeminfo.json
// token.json
// tokens.json
// uploaded_job_input_files.json
// upload_job_input_file.json
// user.json
// users.json
// job_definition.yaml
// execution_output.txt
// DO NOT EDIT!

package testdata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _aclJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\x2a\x48\x2c\xc9\x50\xb2\x52\x50\x52\xd2\x81\xf0\x4b\x2a\x0b\x52\x41\xfc\x94\xcc\xa2\xd4\xe4\x92\xfc\xa2\x4a\x98\x44\x46\x51\x6a\x1a\x48\x22\xda\x31\xc0\x53\xc1\xa3\x28\x35\x2d\x16\x26\x53\x94\x5a\x9c\x5f\x5a\x94\x9c\x5a\xac\x64\xa5\x10\x0d\x16\x52\x50\xa8\x86\xd2\x48\x36\xe4\x25\xe6\xa6\xea\x25\x26\xe7\x14\xe4\xe7\x64\x26\xc3\x8c\x45\xb1\x33\x2d\x33\x27\x15\x59\x1c\xa4\x03\xbf\x4e\x2c\x8e\x82\x4a\xd6\x82\xe9\x58\x2e\x05\x85\x5a\x40\x00\x00\x00\xff\xff\xd3\x20\x2a\x6c\xea\x00\x00\x00")

func aclJsonBytes() ([]byte, error) {
	return bindataRead(
		_aclJson,
		"acl.json",
	)
}

func aclJson() (*asset, error) {
	bytes, err := aclJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "acl.json", size: 234, mode: os.FileMode(420), modTime: time.Unix(1513967749, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bulk_delete_executionsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xb1\x0a\x83\x30\x10\x86\x77\x9f\xe2\xe7\x66\x27\xb5\x20\x59\xbb\xf7\x05\x4a\x87\xa0\x97\x22\xa4\x86\x7a\xb9\x49\x7c\xf7\x52\x39\xeb\x54\xc8\xf4\xc3\xf7\x25\x1f\xdc\x5a\x01\x00\x05\x3f\x45\x5d\x58\xc8\xe1\xbe\x13\x60\xb5\x05\x68\x1a\xc9\x81\xfa\x86\xea\x93\xbd\x58\xc4\x3f\xf9\x2b\x6e\x29\x23\x24\x9d\x47\x87\xbe\x21\x7b\xb2\xd5\x7f\x3b\x6d\x41\xa7\x2d\xe8\x74\x05\x9d\xee\xd7\xd9\xf7\x51\x9f\xf7\xf2\x78\x4d\x3a\x67\x72\x68\x8d\x8a\x0e\x03\x8b\x1c\xb8\x31\xec\x63\x34\x13\x34\x92\x43\xf0\x51\xd8\xdc\xc2\x6f\x65\xc9\xc7\x97\x4b\x05\x6c\x9f\x00\x00\x00\xff\xff\xe8\xaa\xec\x79\x54\x01\x00\x00")

func bulk_delete_executionsJsonBytes() ([]byte, error) {
	return bindataRead(
		_bulk_delete_executionsJson,
		"bulk_delete_executions.json",
	)
}

func bulk_delete_executionsJson() (*asset, error) {
	bytes, err := bulk_delete_executionsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bulk_delete_executions.json", size: 340, mode: os.FileMode(420), modTime: time.Unix(1513921241, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bulk_job_deleteJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\xb1\x8e\x83\x30\x10\x44\x7b\xbe\x62\xb4\xd5\x21\x51\x5d\x49\xcb\x35\xf7\x01\x54\x88\xc2\xc1\x43\x84\xe4\xc4\x8a\x17\xa7\x41\xfc\x7b\x64\x63\x45\x49\x1b\xc5\xd5\x7a\xdf\xac\xde\x6c\x15\x00\x48\xe0\x2d\x52\xd7\xce\xc7\xeb\x2a\x2d\x7e\x9b\x63\x6d\x9c\xd3\x38\x4d\x54\x9d\xa3\x93\x16\xb3\x71\xca\xc2\x32\xa0\xa5\x95\x16\x43\x5e\xa5\xb7\x3d\xa7\x1c\x5a\x12\x95\xa1\xef\xff\xff\x46\x69\xde\xd9\x85\xaa\xe6\xcc\x14\xf8\x29\x16\xf8\x80\xd9\x2c\x2e\x06\xa2\xe0\x5a\x5e\xae\xf6\x3c\x8f\xa5\x41\x4a\x26\xfd\x47\x76\x86\xe0\x43\xe7\xed\xe1\xcf\x3f\x4c\xde\xb2\x81\x92\x30\x27\x7f\x67\xfd\x95\xc6\x47\xe5\x0a\xd8\x1f\x01\x00\x00\xff\xff\xdd\x94\xa6\xa0\x6c\x01\x00\x00")

func bulk_job_deleteJsonBytes() ([]byte, error) {
	return bindataRead(
		_bulk_job_deleteJson,
		"bulk_job_delete.json",
	)
}

func bulk_job_deleteJson() (*asset, error) {
	bytes, err := bulk_job_deleteJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bulk_job_delete.json", size: 364, mode: os.FileMode(420), modTime: time.Unix(1513951634, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bulk_toggle_executionJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\x31\xae\x83\x30\x18\x83\x77\x4e\x61\x65\x7a\x48\x4c\x6f\x64\xa5\x4b\x0f\xc0\x84\x18\x02\x31\x15\x52\x4a\xd4\xfc\xa4\x0b\xe2\xee\x55\x42\x5a\xb5\x6b\xd5\x4c\x7f\xfc\xd9\xb2\xb7\x02\x00\x94\xe7\x2d\x50\xd6\xc6\x85\x65\x55\x35\xfe\xab\x43\xe6\xa2\x07\x4b\xa3\x6a\xac\x3e\x30\x8b\xda\x5a\x09\xe3\x48\x91\x29\x58\x55\x63\xd2\x56\x9e\x2c\x01\x9a\x14\xe9\x92\x14\xdf\xf6\xba\x92\x69\x8e\x54\x75\x6d\x7b\x3e\xf5\xaa\xfa\x64\x57\x8a\xe8\x0b\xa3\xe1\x2f\xb7\xc0\x79\x4c\x7a\xb6\xc1\x13\x19\x97\xea\x2d\xb5\xa7\xbb\xcf\x0b\xa2\x33\xd6\x7f\xd5\x4e\xef\x9d\x6f\x9c\x39\xfa\xd3\x0f\xa3\x33\xac\x20\x24\xf4\xe0\xee\x2c\x7f\xb2\xf8\x98\x5c\x00\xfb\x23\x00\x00\xff\xff\xa6\xe9\x04\xec\x81\x01\x00\x00")

func bulk_toggle_executionJsonBytes() ([]byte, error) {
	return bindataRead(
		_bulk_toggle_executionJson,
		"bulk_toggle_execution.json",
	)
}

func bulk_toggle_executionJson() (*asset, error) {
	bytes, err := bulk_toggle_executionJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bulk_toggle_execution.json", size: 385, mode: os.FileMode(420), modTime: time.Unix(1513918454, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _bulk_toggle_scheduleJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x8e\x31\xae\x83\x30\x18\x83\x77\x4e\x61\x65\x7a\x48\x4c\x6f\x64\xa5\x4b\x0f\xc0\x84\x18\x02\x31\x15\x52\x4a\xd4\xfc\xa4\x0b\xe2\xee\x55\x42\x5a\xb5\x6b\xd5\x4c\x7f\xfc\xd9\xb2\xb7\x02\x00\x94\xe7\x2d\x50\xd6\xc6\x85\x65\x55\x35\xfe\xab\x43\xe6\xa2\x07\x4b\xa3\x6a\xac\x3e\x30\x8b\xda\x5a\x09\xe3\x48\x91\x29\x58\x55\x63\xd2\x56\x9e\x2c\x01\x9a\x14\xe9\x92\x14\xdf\xf6\xba\x92\x69\x8e\x54\x75\x6d\x7b\x3e\xf5\xaa\xfa\x64\x57\x8a\xe8\x0b\xa3\xe1\x2f\xb7\xc0\x79\x4c\x7a\xb6\xc1\x13\x19\x97\xea\x2d\xb5\xa7\xbb\xcf\x0b\xa2\x33\xd6\x7f\xd5\x4e\xef\x9d\x6f\x9c\x39\xfa\xd3\x0f\xa3\x33\xac\x20\x24\xf4\xe0\xee\x2c\x7f\xb2\xf8\x98\x5c\x00\xfb\x23\x00\x00\xff\xff\xa6\xe9\x04\xec\x81\x01\x00\x00")

func bulk_toggle_scheduleJsonBytes() ([]byte, error) {
	return bindataRead(
		_bulk_toggle_scheduleJson,
		"bulk_toggle_schedule.json",
	)
}

func bulk_toggle_scheduleJson() (*asset, error) {
	bytes, err := bulk_toggle_scheduleJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "bulk_toggle_schedule.json", size: 385, mode: os.FileMode(420), modTime: time.Unix(1513918566, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _config_itemJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\xca\x4e\xad\x54\xb2\x52\x50\x2a\x28\xca\xcf\x4a\x4d\x2e\xd1\x2b\x2e\xce\xd0\x4d\xce\xcf\xcb\x4b\x4d\x2e\xd1\x2d\xc9\xcc\x4d\xcd\x2f\x2d\x51\xd2\x81\xa8\x2c\x4b\xcc\x29\x4d\x05\xa9\x35\x50\xe2\x52\x50\xa8\x05\x04\x00\x00\xff\xff\x9f\x20\x25\x5a\x40\x00\x00\x00")

func config_itemJsonBytes() ([]byte, error) {
	return bindataRead(
		_config_itemJson,
		"config_item.json",
	)
}

func config_itemJson() (*asset, error) {
	bytes, err := config_itemJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config_item.json", size: 64, mode: os.FileMode(420), modTime: time.Unix(1513971893, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _execution_adhocJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xb1\x0a\xc2\x30\x00\x44\xf7\x7e\xc5\x71\x93\x42\x17\xd7\x6c\x4e\xda\xcd\x45\x10\xc4\x21\x34\x57\x1b\x6c\xaa\x24\x2d\x08\xd2\x7f\x97\xb6\x34\xe3\xf1\xde\xbd\x5f\x01\x00\x0c\x4a\xc9\x3e\x45\x03\x56\x21\xc8\x79\x3b\x08\xfa\xaa\x1e\x07\xff\xee\x91\xea\x56\x6e\xec\xe4\xb0\xbb\xed\x59\xae\x9f\x8c\x69\xb0\x66\x00\x7a\x47\x83\x43\xb9\xcd\x36\xaa\x99\xa3\xf7\xe3\xa5\xc2\x39\xaa\x79\x30\xb3\x8f\x62\xb0\x9d\xef\x5f\x8b\x70\xba\x6e\xc2\xc2\xa7\x02\x98\xfe\x01\x00\x00\xff\xff\x20\x03\xf2\x8a\x9d\x00\x00\x00")

func execution_adhocJsonBytes() ([]byte, error) {
	return bindataRead(
		_execution_adhocJson,
		"execution_adhoc.json",
	)
}

func execution_adhocJson() (*asset, error) {
	bytes, err := execution_adhocJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "execution_adhoc.json", size: 157, mode: os.FileMode(420), modTime: time.Unix(1513922160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _execution_input_filesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\x4b\x6b\xc3\x30\x10\x84\xef\xf9\x15\xc2\xe7\x0a\xac\xd5\xea\xe5\x5b\xf3\x28\xe4\x92\x4b\x9b\x4b\x4b\x0f\x7a\xac\xa8\x8b\x93\x14\xc7\x29\xa1\x21\xff\xbd\xc8\x04\xea\xf4\xb4\x68\x86\x59\xcd\x7e\x97\x19\x63\x8c\x55\xb9\xed\xe8\x58\x35\xec\x6d\x7c\x32\x76\xb9\x4d\xc6\xaa\x36\x55\x0d\xab\xa4\x85\x68\x94\xd3\x1c\xa5\x0a\x1c\x45\x2d\xb9\x35\x56\x70\x1d\x24\xe4\x90\x34\xb8\x00\xd5\xc3\x5f\xea\x74\xa4\xbe\xe4\x7c\xda\xb5\xfb\xa9\x51\x7e\x7a\x1e\xfc\x40\xc5\x4d\xd4\xd1\x40\x69\xea\x1f\x3f\x7c\x71\x1c\x58\xa4\x84\x39\x99\x4c\x42\xa2\x76\x35\x6a\xa5\xb3\x04\x97\x82\x8e\x11\x5d\xac\xc9\x78\x52\xc1\x82\x71\x21\x67\x69\xb2\xd3\x21\x6a\x0a\xca\x05\xef\xef\x56\x7e\x1e\xc2\x7a\x3c\xc2\x04\x99\x73\x56\x8e\x1b\x0f\x89\xa3\x97\x82\x7b\x15\x80\xa7\x04\x5a\x18\x13\x2d\xc8\x38\x0d\x26\x3f\xd0\xa2\x27\x5f\x2a\x36\xac\x82\x5a\x20\xaf\x81\x03\xbe\x80\x6c\x40\x37\x68\x5f\xef\xaa\x53\xff\x4d\xfd\xe6\x90\x68\xbb\x5d\x2f\x47\x6a\x08\x6a\xae\x9d\xe0\x46\x0a\xc7\x71\xb5\x5a\x71\x8b\xa0\xf8\x53\xad\xe4\x42\x83\x9d\xe3\xfc\xf1\x3f\x9c\x8d\xdf\x15\x36\xfb\x53\xd7\x4d\x77\xb7\x3f\x45\x15\x30\xd1\xe8\xfc\xd5\xf6\x7e\x68\x0f\xfb\xe5\x8d\x27\xd4\xc2\x4c\x1a\x9a\x46\xdc\x37\xa4\x33\xc5\x11\x05\x58\x69\x6e\xf2\x75\x9c\xef\x33\xc6\xae\xbf\x01\x00\x00\xff\xff\xf8\xcb\xf9\x42\x0d\x02\x00\x00")

func execution_input_filesJsonBytes() ([]byte, error) {
	return bindataRead(
		_execution_input_filesJson,
		"execution_input_files.json",
	)
}

func execution_input_filesJson() (*asset, error) {
	bytes, err := execution_input_filesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "execution_input_files.json", size: 525, mode: os.FileMode(420), modTime: time.Unix(1513960164, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _executionJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\xbf\x6e\xdc\x30\x0c\xc6\xf7\x3c\x05\xa1\xf9\xee\xfc\xdf\x88\x3d\x77\xee\xd4\xa9\x46\x06\x9d\xc5\xb3\x95\x3a\x96\x41\x49\x41\x81\xe2\xde\xbd\xa0\xec\x08\x4a\x9b\xb4\x93\xa5\x8f\xfc\xf8\x13\x4d\xfe\x7a\x00\x00\x10\x5a\x89\x1e\x8a\xd3\x7e\x99\x09\x6f\xa2\x07\x31\x78\x5a\x9e\xc4\x21\x6e\x48\x2f\x72\xd1\xeb\x8f\xbf\x22\xd6\x49\xe7\x2d\xcb\xd6\x8f\x23\xa2\x42\x95\xdd\xa4\x5e\x50\x65\xf2\x6a\xc8\xa1\xca\x9c\x7e\x41\x65\xbc\xcb\x08\x1d\x69\x54\x99\x71\x33\x52\x2c\x4d\xe6\x19\x47\x17\x0a\x1f\xe7\x58\xdc\x5b\xa4\x9d\x68\x91\xa2\xaa\xa4\xc3\xb3\x75\x92\x8b\x8b\x1e\xf6\x26\x38\x7b\xd5\x3f\x99\xc5\xcd\xd4\x55\xd1\x54\x6d\x55\x75\x8f\x79\x77\x7a\x4b\x60\x23\x97\x2b\xf3\xa2\x39\xe7\xcd\xb9\xa8\xbe\x15\x6d\xdf\x3c\xf6\x4d\xf7\x5d\x84\xa4\x7b\x8a\xc0\x55\xfd\x17\x50\xb7\x75\x59\x7d\x04\x68\x13\x40\xd7\xe7\xed\x1f\x80\x67\x73\x4d\x2b\x87\x09\x88\xc1\x7b\xad\xde\xda\xfc\x64\x14\xff\x1a\x06\x80\x90\xaf\x48\x72\xc2\x2f\x9e\xa4\xd3\x66\x15\x3d\xb4\x79\x57\xc7\xf0\x2a\xc3\xeb\xc5\xc0\x87\xc4\x36\x91\xf1\x5b\x08\x84\x53\x0a\xfb\x7c\x3c\xdc\x30\xda\x91\xf4\x76\xa0\xc4\x90\xdc\x93\x2c\x13\x04\x9b\x34\xbc\x8b\x25\x7b\x64\xcc\xdb\xc5\x82\x45\x87\xd6\xbd\xca\xc5\xa3\x38\x62\xf7\xf7\xe3\x79\x8f\xc5\x71\x36\x30\xe3\xb2\x18\xe0\xcd\x42\x18\x2e\x97\x0b\x34\x60\x1d\x6e\x36\xae\x8d\xa4\xc9\x3a\xd2\xeb\xc4\x96\x33\x93\x20\x62\x80\xef\x25\xc8\xb8\xd5\xbc\xcb\xd6\xde\xfc\xf2\xd5\x28\xe4\x97\x0f\xf1\x17\x1a\x85\x52\x9c\xc2\xf7\xba\x3f\xef\xe9\x70\xed\x7b\xff\xa1\x63\x3c\x1c\xea\x70\x3c\x00\xdc\x7f\x07\x00\x00\xff\xff\x9e\xef\x41\x7a\x7e\x03\x00\x00")

func executionJsonBytes() ([]byte, error) {
	return bindataRead(
		_executionJson,
		"execution.json",
	)
}

func executionJson() (*asset, error) {
	bytes, err := executionJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "execution.json", size: 894, mode: os.FileMode(420), modTime: time.Unix(1514269993, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _executionsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xcb\x6e\xdb\x3a\x10\xdd\xe7\x2b\x06\xb3\xb6\x7c\x25\xeb\x61\x49\xbb\x0b\x04\x28\xb2\x29\x0a\xb4\xde\xd4\xf0\x82\xa6\x46\x32\x5d\x59\x14\xf8\x30\x0c\x14\xfe\xf7\x82\x52\xec\x90\x69\x5c\x64\x25\xce\x9c\xc3\x39\x9c\x97\x7e\x3f\x01\x00\xe0\xc8\x3a\x31\x74\x58\xc3\x6c\x03\x20\x97\x76\x30\x58\xc3\x6a\x71\xf3\x18\x69\x58\x1f\x78\x64\xdb\x6a\x72\xa4\xf8\xee\x3a\xb1\x8b\xa3\xc4\x93\x7d\x9d\xdd\x48\x17\xe2\xd6\x08\x39\x68\xac\x61\xfb\x4a\xbd\x29\x01\xa0\x68\xb0\x86\xb4\x5c\x2f\xde\x5c\x07\x45\x2d\xd6\x80\xdb\xff\xbf\xbd\x80\x55\xfd\x0e\x3d\x70\x24\x75\x62\xbd\x18\x7e\x4d\x8c\x2f\x9b\xbf\x19\xda\x30\x63\xf5\x04\xcf\xc7\x00\xe5\x56\x1b\x79\xfa\xee\x73\x94\x18\xba\x50\x43\xc9\x23\x71\x97\x1c\x1a\xd2\xc6\x87\xac\x26\x35\x5d\x73\x87\x50\x96\xd4\x99\xd4\x66\xf3\xf2\x8c\x35\x6e\xdd\x37\x80\x1b\x66\x28\xd2\x86\x29\x43\x8d\x57\xeb\x39\xe8\x20\x2e\x46\x9c\x08\x6b\x48\xb2\x34\xc9\xd3\x22\x4d\xab\x32\xae\x16\x3e\xc9\x05\x70\xca\xab\x38\xc9\xa3\x38\x8f\x92\xf4\x47\x52\xd4\x79\x59\xe7\xd5\x4f\xbc\x13\xaf\xef\x25\x69\x68\x3e\x25\x98\x15\xd9\x2a\x7d\x24\x58\x78\x82\x55\x1d\x17\x0f\x04\x8f\x72\xff\x5e\x69\x6a\x2f\xae\xb3\x38\x6e\xdb\xaa\x8c\xd2\x84\x67\x51\x56\xa6\x59\xb4\x67\x69\x13\x31\xa2\xaa\xc8\x0a\x2a\x8b\x75\x8b\x81\x38\x3b\x93\x62\x1d\x3d\x5b\xc5\xdc\xf0\x60\x0d\x45\x5c\x65\x01\x65\x60\x53\x02\x53\x8b\xc0\x49\x07\x68\xa7\xa4\x1d\x1d\xcc\x46\x11\x39\xca\x7f\x47\xb9\x8f\x94\x1d\x22\x6d\x68\xd4\x21\xf9\x71\xc3\x5d\x1d\x48\x73\x25\xc6\xd7\x67\x60\x08\xfe\x6b\x56\x3f\x33\xad\x6e\x93\xc6\xdb\x7a\xf8\x95\x9b\x81\xd5\x94\x41\xc0\x9f\x81\xe4\xf6\xd6\x33\xeb\x2d\xa1\x87\x5f\x3f\x9e\x85\x30\x09\xe2\x07\x09\x07\xea\x7b\x09\xe6\x40\x8a\x60\xbb\x5c\x2e\x21\x87\xa9\x36\xc1\xdc\x32\xd5\xcd\x1b\xe2\xae\x45\x4e\x19\xee\xb2\xe0\xec\x15\xb0\x60\x0d\x2c\xe7\xa4\x75\x6b\xfb\xaf\xb2\x21\x7f\xe9\x61\xfe\x47\x34\x27\xa6\x8c\xe8\xd8\xb0\xec\x25\x67\xfd\xdb\xd3\x77\x5e\x94\x96\x89\x9e\x9a\x8f\x22\xb8\xc6\xcb\x86\x38\x2e\xa6\x6f\xe3\xa7\xbe\x7b\xf2\x4b\xe0\x2c\x77\x7a\x02\xf8\x13\x00\x00\xff\xff\x82\x5b\xb7\x13\xea\x04\x00\x00")

func executionsJsonBytes() ([]byte, error) {
	return bindataRead(
		_executionsJson,
		"executions.json",
	)
}

func executionsJson() (*asset, error) {
	bytes, err := executionsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "executions.json", size: 1258, mode: os.FileMode(420), modTime: time.Unix(1513959056, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _execution_stateJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\x31\x6f\xf2\x30\x10\xdd\xf9\x15\x96\x67\xd0\x87\x13\xbe\xaa\xca\x0a\x0c\x5d\xba\x40\x17\x2a\x06\x97\x18\x1a\x35\x24\x51\x72\x29\x48\x28\xff\xbd\x4a\x30\xce\xd9\x09\x60\x23\x36\xb8\x7b\x77\x3e\x3f\xbf\x77\x39\x0d\x08\x21\x84\x6e\xd2\x7d\x16\x0b\x10\x21\x0d\x08\xe4\xa5\x18\x9e\xc3\xe2\x28\x36\x25\x44\x69\xb2\x00\x0e\x82\x06\x84\x2e\x3e\xa6\xd3\xf9\x7c\x36\x9f\xd1\x0b\x24\x09\x97\xd1\xbe\xc9\x79\x63\x36\x19\x8d\xd9\x88\xf9\x4b\x6f\x1c\xf8\xaf\x81\xff\xb2\xba\xc0\x0a\x91\xff\x8a\xfc\x3d\x0d\x1b\x64\x18\xed\x12\x9e\xa8\x1c\xf0\x1c\xae\x36\xf1\xfe\xab\x26\x65\x16\x72\x10\x56\xc7\x81\xc8\xa6\x69\x99\x00\x0d\x88\x27\x63\x3c\x8e\xeb\xf3\x0b\x1a\x90\xcf\x26\x42\xd4\x20\xcd\xdf\xb5\xc4\x01\xcf\x77\x02\xac\xa0\x89\x04\x9d\x0c\x50\x5b\x46\x54\xce\x92\x50\x09\xac\x2f\xb0\x81\x63\x8d\x60\x54\x25\xaa\xe1\xf3\xda\x7a\xff\x70\x63\xf9\x6b\x3d\x40\xc7\xb4\x6d\xdf\x6a\x5d\x30\x7f\x82\xd8\xc5\xdc\xb4\xb3\x58\x4e\x72\x5b\x35\x6c\x85\xa1\x35\xc7\x4d\x33\x4c\xb4\x4e\x36\x8e\x3a\xb0\xe1\x34\x87\x95\x00\xbb\x15\xf7\xb5\x8d\xf0\x55\xdf\x43\xdf\x3b\xb4\xf5\x07\xa2\x4b\x64\x9a\x91\x9b\x4c\x14\x9e\xd5\x84\x42\xd6\xd3\xa9\x79\xd0\x53\x1f\xd2\xfc\x67\x1b\xa7\x07\xf3\x59\xfa\x77\x89\xd5\x89\x26\x81\xf6\x8e\x57\xed\x5b\xdf\x33\x2d\xd3\xe3\x7e\x5d\x46\x28\xb8\xd6\x2a\xfb\xf7\x81\x65\xb1\x69\x15\x93\x45\x09\xb3\x97\xac\xf5\xca\x45\x05\x57\x2d\xa4\x5f\xa2\x2f\xe7\x38\xdb\x43\xf3\x91\x07\x5e\x1a\x11\x7c\x4f\x50\x9d\xaa\xca\x88\x54\x1d\xc2\x9c\x7d\x7e\xcb\x78\x32\xdf\xb5\xdf\x63\x37\xa8\xae\x6a\xcd\x85\xf7\x9b\xaf\xda\xbb\x86\x9e\xb1\xd9\xb5\x21\xe8\x37\x2f\x16\xe5\x17\x5a\x23\xc6\xc2\x72\x92\x04\xe6\x7f\xcb\xe3\xa2\xbb\xf9\x3c\xfb\xcd\x87\x48\x3f\xd3\x5d\x7f\x17\xab\xbf\x00\x00\x00\xff\xff\xe6\x6f\x85\x54\x2c\x09\x00\x00")

func execution_stateJsonBytes() ([]byte, error) {
	return bindataRead(
		_execution_stateJson,
		"execution_state.json",
	)
}

func execution_stateJson() (*asset, error) {
	bytes, err := execution_stateJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "execution_state.json", size: 2348, mode: os.FileMode(420), modTime: time.Unix(1513921500, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _failed_acl_validationJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\x2a\x4b\xcc\xc9\x4c\x51\xb2\x52\x48\x4b\xcc\x29\x4e\xd5\x81\x88\x15\xe4\xe7\x64\x26\x67\xa6\x16\x2b\x59\x29\x44\x83\x45\x14\x14\xaa\xa1\x34\x4c\xb6\x52\xc9\x4a\x41\x29\x2d\x33\x27\xd5\x50\x2f\x31\x39\x07\x22\x14\x6d\x18\xab\xa4\x83\x50\x97\x5a\x54\x94\x5f\x84\x6c\x06\x58\xb4\x28\x35\xb1\x38\x3f\x4f\x4f\x4f\x0f\x49\x29\x5c\xd8\x08\x24\x0e\x17\x8e\x85\xb2\x6a\x41\x2a\x49\x71\x87\x11\x8d\xdc\xc1\x05\xe3\xd5\x02\x02\x00\x00\xff\xff\xc2\xb3\x1e\x81\x3d\x01\x00\x00")

func failed_acl_validationJsonBytes() ([]byte, error) {
	return bindataRead(
		_failed_acl_validationJson,
		"failed_acl_validation.json",
	)
}

func failed_acl_validationJson() (*asset, error) {
	bytes, err := failed_acl_validationJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "failed_acl_validation.json", size: 317, mode: os.FileMode(420), modTime: time.Unix(1513917283, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _historyJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x97\xc1\x72\x9b\x30\x10\x86\xef\x79\x0a\x8d\xce\x66\x90\x84\x24\x40\x4f\xd1\x99\xf4\xd4\x4c\x0e\x0a\x2c\x31\x29\x46\x0c\x88\x36\x9d\x4e\xde\xbd\x23\x1c\xc7\xd8\xa6\xc4\x06\xd3\x4b\x7d\x4a\xd8\xfd\xb5\xcb\x2e\xdf\xcf\xe0\xdf\x77\x08\x21\x84\x2b\xfd\x9c\x97\xcf\x58\xa1\xed\x35\x42\x38\x31\x6d\x69\xb1\x42\x72\xb5\x8b\x58\x63\x75\x71\x10\xd9\xe8\x57\xac\x10\x23\x1f\x01\x93\x65\x0d\xb8\x53\xa4\x8b\xbc\x6d\x13\x18\x7e\x40\x69\x1b\xac\xd0\xc3\xbb\x70\xd7\x05\x21\xdc\x58\x5d\x5b\x9b\x6f\x00\x2b\x44\x05\xe5\x84\x70\xca\x59\x20\xf9\x6a\xaf\x81\x32\x3d\x51\x44\x54\xf4\x14\x36\xb7\x85\xcb\x63\x9d\xae\x4d\x82\x57\x07\xf5\x6d\xeb\x7a\xe3\xa6\x4d\x12\x80\x14\xd2\xd3\xf4\xbd\xad\xb7\xe3\xef\x44\x07\x92\x76\xb3\xd1\xf5\x2f\x97\xad\x1a\xe4\x41\xd6\x4f\x96\x26\x05\x6f\xaf\xd8\x0f\x86\xfa\x0d\x15\xa2\x74\xd5\x4f\x65\x3a\x2f\xba\x38\x39\x08\xef\x56\x4c\xe9\x47\xf4\xad\xd7\xac\x6d\xa0\xde\x0e\xb9\xc9\xcb\xfe\x5d\x54\xb5\x79\x81\xc4\x2d\x1e\x5b\x68\xec\xee\xb2\xa7\x48\xb5\x05\xaf\xdb\x75\xd7\x16\x33\x42\x43\x8f\x32\x8f\x05\x5f\x09\x57\x9c\x29\xc6\xbe\x9d\xe8\xa1\x4c\xcf\x53\xc3\x2b\x24\xad\xcd\x4d\x79\xbc\x82\xbc\x3b\x4e\x23\x7c\x30\xe6\xba\x86\xcc\xc5\xd7\xd6\x56\xca\xf7\x0b\x93\xe8\x62\x6d\x1a\xab\x38\xe7\xc4\xd7\x55\xee\x33\xea\x7f\xd4\xf4\x8f\x8f\x57\x50\x6f\x74\x91\x97\xdf\xff\x5e\xe3\x7d\x03\x7e\x6f\x1b\xbd\x82\xcd\xda\xfc\x74\x55\xf7\x4b\xbe\x3b\x5a\xf6\x38\xa0\x84\x87\x94\x93\x31\x40\x09\x0f\x25\xe3\x37\x40\xaf\x06\x28\x51\x3c\x3c\x1f\xd0\x13\xf5\x67\x80\x86\xf3\x00\x0d\x17\x01\x34\x9c\x0a\x68\x10\x4b\x19\x46\x63\x6f\xd0\x20\x96\x61\xc0\xe5\xff\x0b\x68\xf7\xcf\x15\x01\x0d\x62\xc5\xe4\xd9\x80\x3a\xf5\x65\x80\xca\x79\x80\xca\x45\x00\x95\x53\x01\x65\x54\x30\xc1\xc6\x00\x65\x2c\x64\x42\xd2\x21\x40\xdd\x1d\xf9\x4d\x01\x50\x79\x2f\xe6\x69\x31\x52\xbf\x14\xed\x73\x5e\x3e\x74\x6b\x71\x83\xaf\x90\x23\xf5\xde\x42\xa5\x90\xad\x5b\x78\x9c\x04\xf1\x45\x0c\xff\xdb\x77\x2c\x89\x15\x3d\xff\x23\x80\xd2\x63\xb5\x7b\x18\x83\xf0\xa6\xf4\x29\xce\x58\x42\xbd\x54\x6a\xe9\xf1\x20\xd1\x5e\x04\x71\xe6\x45\x42\xd0\x38\x15\x9a\x06\x2c\x98\x80\xf7\x8b\x79\xf2\x2f\x2f\x3d\x11\x7d\xd7\xac\x83\xfe\xac\x8e\x83\x0f\xee\x33\x8b\x8b\x79\x16\x17\x8b\x58\x5c\xcc\xb0\x38\x61\x5c\x8c\x5b\x9c\xb0\x68\xf0\x2b\xfe\x66\xf1\xe5\x2c\x4e\x2e\xb2\x38\xb9\x59\xfc\x8a\x16\xe7\xf3\x2c\xce\x17\xb1\x38\x9f\x6e\x71\x1e\x31\x12\x8e\x5a\x5c\x46\x8c\x0f\xfe\x0e\xba\x59\x7c\x31\x8b\x93\xe8\x12\x8b\x1f\xa9\x6f\x16\x9f\x67\xf1\x29\x3b\xe8\x59\xfc\x3a\x73\x1e\x5b\x3c\x18\xb0\x78\xf7\xf7\xf1\x0e\xa1\xb7\x3f\x01\x00\x00\xff\xff\x39\xd7\xe7\xc6\x04\x14\x00\x00")

func historyJsonBytes() ([]byte, error) {
	return bindataRead(
		_historyJson,
		"history.json",
	)
}

func historyJson() (*asset, error) {
	bytes, err := historyJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "history.json", size: 5124, mode: os.FileMode(420), modTime: time.Unix(1514005350, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _imported_jobJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x91\xc1\x4e\xc3\x30\x10\x44\xef\xfd\x8a\x95\xcf\x04\xd7\xa9\x49\x5b\xff\x0a\xe2\xb0\xb1\xd7\x89\xdb\x24\xb6\x1c\x17\x90\xaa\xfe\x3b\x72\x10\x08\xc2\x81\x88\x5b\xf0\x69\xb5\x33\xab\xf1\xe8\x5d\x37\x00\x00\x6c\xbc\x68\x4d\x64\xc8\x30\x05\x8f\xd3\x2a\xbf\xeb\xe7\x34\x99\xdc\x60\xe8\x95\x29\x10\x77\xdf\xf7\x6d\x24\xcb\x14\xb0\x36\xa5\xa0\x38\xef\xd1\xf4\x18\x93\x6b\x70\xb8\xef\xbc\xc6\x4e\x49\x29\xb7\x1c\x83\xe3\x42\xf2\x93\xaf\xf9\xae\xae\xb4\x38\xda\xaa\x90\x82\xa8\x90\xfb\x07\x5b\x1c\xac\xd9\x16\x07\x2b\xb0\xac\x6c\xb9\xc7\x23\xb2\x59\x88\xcb\x5f\x63\x7f\xb9\x1c\xb0\xa7\x7c\xdb\x78\x6f\xe6\x5a\x13\xfd\x25\x64\x11\x43\x28\xb9\xa1\xe7\xb9\x21\x44\x7f\x22\x9d\xb2\x25\xd1\x98\x7e\xc8\x14\x7b\xec\xdc\x70\xfe\xbd\x7f\x2e\x3e\xb6\xfe\x65\x59\xfb\x2f\x31\xb7\x69\x7e\x7a\x4f\x66\x16\x5d\xb7\x0c\x53\xb9\x4e\x4c\x35\xfe\x03\x4a\xe3\xd9\x85\xb0\x0c\xd3\x6e\x9d\x98\x3e\x1a\xae\x17\xd5\x06\xe0\xf6\x16\x00\x00\xff\xff\x65\x86\x73\xd0\xff\x04\x00\x00")

func imported_jobJsonBytes() ([]byte, error) {
	return bindataRead(
		_imported_jobJson,
		"imported_job.json",
	)
}

func imported_jobJson() (*asset, error) {
	bytes, err := imported_jobJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "imported_job.json", size: 1279, mode: os.FileMode(420), modTime: time.Unix(1513950718, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _incomplete_logstorage_executionsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x3f\x6f\x83\x40\x0c\xc5\xf7\x7e\x0a\xcb\x33\x41\x40\x55\x45\xba\xad\x4b\xff\x6c\x0c\xed\xd2\x28\xc3\x09\x4c\x7a\xe9\x81\xa9\xcf\x48\x89\x22\xbe\x7b\x75\x94\xb4\x44\x62\x32\xcf\xef\x87\xf5\xde\x5d\xee\x00\x00\x50\x59\xad\x47\x03\x79\xf2\xab\x5b\x7b\x42\x03\x45\x36\x4b\x6e\x9a\x40\x8a\x06\xae\x0b\x3a\x51\x35\xa8\xe3\x2e\xa0\x81\xdd\xb4\x03\xb8\xcc\x13\x00\x5d\xfd\x7f\x6c\x5a\xf4\xc2\x47\xaa\xe2\x09\x6c\xcf\xe5\x2c\x16\xfe\xa7\x50\x13\xcd\xdd\x63\xf9\x0a\x2f\x42\xcd\x7e\xe9\xf6\x24\xad\xf5\xae\xfb\x9a\x90\xe7\xf7\x15\x24\x28\x8b\x3d\x10\x9a\x45\x0c\x00\xf4\x5c\x59\xff\xe4\x3c\x85\x52\x28\x50\x17\x13\xa8\x0c\x94\x2c\x21\xd7\x55\xdc\xf6\x9e\x94\x22\xa9\xe7\x9e\x62\x2d\x94\xda\xf3\x21\x09\x6a\x95\xd2\x63\xe0\x0e\x6f\x7e\xfa\x1e\x68\xa0\x7a\xed\x5c\x63\x9d\x5f\x77\x6a\xab\x31\x21\x16\x59\xbe\xdd\x64\xf7\x9b\xe2\xe1\xad\xc8\x4d\xbe\x35\x79\xf1\x81\x7f\xe0\xb8\xa8\x45\x22\x2c\xd3\x23\x63\x4b\x21\xc4\x86\xc9\xf5\x2b\x4d\x53\xdc\xcf\xe8\x38\xcf\xa8\xc7\x9f\x00\x00\x00\xff\xff\x8b\x22\x6d\x5c\xd5\x01\x00\x00")

func incomplete_logstorage_executionsJsonBytes() ([]byte, error) {
	return bindataRead(
		_incomplete_logstorage_executionsJson,
		"incomplete_logstorage_executions.json",
	)
}

func incomplete_logstorage_executionsJson() (*asset, error) {
	bytes, err := incomplete_logstorage_executionsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "incomplete_logstorage_executions.json", size: 469, mode: os.FileMode(420), modTime: time.Unix(1513967156, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _job_infoJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xc1\x6e\xc3\x20\x10\x44\x7f\x25\x9a\x33\x16\xc1\xb1\xdd\x98\x73\xfb\x21\x6b\x58\x07\x5c\x62\x10\xe0\xe6\x50\xf5\xdf\xab\x34\x89\xaa\x1e\x2a\xe5\xb6\x23\x8d\xf6\xbd\xf9\x84\xb7\xd0\xb0\x6a\x1a\xe7\xd6\xa8\xc6\x0e\x34\x34\xdd\xc1\x50\x73\xe4\x71\x6e\x8e\x7d\xaf\x46\xdb\x93\x3a\xb4\x07\x08\x14\xe3\xd8\x6e\x81\x2d\xf4\x4c\xa1\xb0\x80\xcb\x3c\x43\xc3\xd5\x9a\xb4\x94\x21\x1a\x0a\x2e\x96\xaa\xbb\xae\xdb\x4b\x4a\x5e\xb6\x4a\x2e\x71\x92\x4f\x02\xe8\x83\x33\x9d\xf8\x75\xcb\x54\x7d\x5c\xa1\x55\xbb\xdf\xbf\x0c\xbf\xe4\xb7\x95\xa6\x1f\x7e\xcd\x1b\x0b\xf0\xdf\x98\x38\x9f\x29\xf8\xf5\xfd\x5f\xa5\x94\xe3\xc2\xa6\xca\xca\xa5\x3e\xee\xab\x5f\x71\xf1\xf2\xac\xe4\x4a\x67\x86\x46\x09\xcc\xa9\x59\xe2\x04\x81\x53\x8e\x5b\x82\xc6\xf5\x2d\x04\x2c\x17\x93\x7d\xba\x4d\xb8\x15\xcb\x8e\x76\x17\xe7\x03\x43\xe0\x0e\xbe\xf7\x1f\xe9\xeb\x3b\x00\x00\xff\xff\xd7\x48\x39\x69\x8c\x01\x00\x00")

func job_infoJsonBytes() ([]byte, error) {
	return bindataRead(
		_job_infoJson,
		"job_info.json",
	)
}

func job_infoJson() (*asset, error) {
	bytes, err := job_infoJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "job_info.json", size: 396, mode: os.FileMode(420), modTime: time.Unix(1514272162, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _job_metadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xce\xb1\x0e\x82\x30\x10\xc6\xf1\x9d\xa7\x68\x3a\x1b\x22\xa8\x41\xdd\x4c\x30\x86\xcd\x85\xc9\x38\x9c\x70\x40\xb5\x14\x72\x50\x17\xe3\xbb\x1b\x4e\xa8\x51\xb7\x2f\xbf\x7f\xda\xdc\xc3\x13\x42\x08\xa9\x72\xb9\x15\xf2\x94\xa6\x49\x7c\x96\xb3\xb7\x19\xa8\x91\x75\x18\x4e\x4b\x6a\x6c\xcb\xcc\xcb\x79\x4b\xcd\x15\xb3\x9e\xcb\xb8\x5d\xcb\xb1\xcb\x48\xb5\xbd\x6a\xcc\xd0\x7d\xdf\x9f\x4a\x45\x58\xf0\x93\xdd\x31\x11\x96\xf4\xe7\x3b\xa4\x1a\xb4\x32\x37\xae\x87\xf4\xbb\x76\x59\x85\xb9\xd5\x38\x5c\x5d\x80\xee\xf0\xc7\xf7\x06\x2e\xff\x15\x9d\xf6\x64\x27\x84\x3b\x12\x94\x18\x5b\x82\xf1\xbe\x60\xb9\x08\x36\xd1\x2a\x8c\xd6\x61\x38\xf7\x9e\xaf\x00\x00\x00\xff\xff\xe9\xc6\x14\x57\x22\x01\x00\x00")

func job_metadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_job_metadataJson,
		"job_metadata.json",
	)
}

func job_metadataJson() (*asset, error) {
	bytes, err := job_metadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "job_metadata.json", size: 290, mode: os.FileMode(420), modTime: time.Unix(1513918839, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _job_option_uploadJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x24\xcb\x41\x0a\xc2\x30\x10\x46\xe1\x7d\x4f\xf1\x33\x6b\x07\x3a\x74\x3a\x6d\x72\x9b\x8c\x18\x08\x44\x23\x98\x8d\x48\xee\x2e\x34\xcb\x07\xef\xfb\x2d\x00\x40\xbd\xf5\x54\x29\x42\x6e\xb3\xdb\xbb\x97\xf6\xfa\x50\xc4\x1c\x00\x7a\x7e\x73\xa9\x0f\x8a\x20\xf7\x63\xd5\x70\x9e\x6c\x6a\x07\xab\xc9\xc6\x1e\x4c\x58\xb6\x55\x34\x5b\xda\xf7\xbb\xd3\xc5\xc6\x02\x8c\x7f\x00\x00\x00\xff\xff\xb4\xe4\xd8\xf4\x63\x00\x00\x00")

func job_option_uploadJsonBytes() ([]byte, error) {
	return bindataRead(
		_job_option_uploadJson,
		"job_option_upload.json",
	)
}

func job_option_uploadJson() (*asset, error) {
	bytes, err := job_option_uploadJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "job_option_upload.json", size: 99, mode: os.FileMode(420), modTime: time.Unix(1513918896, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _jobsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xd0\xbf\x0e\x82\x30\x10\x06\xf0\x9d\xa7\xb8\x74\x36\x3c\x80\x9b\x89\xc6\xb0\xa8\x0b\x13\x61\xa8\xf4\x90\x6a\x69\xc9\x41\x75\x30\xbe\xbb\xe9\xa1\x50\xff\x2c\xe4\xf2\xfd\xee\x23\xe9\x15\x09\x00\xc0\x9d\xbf\x00\x42\x2b\xb1\x04\x51\xe4\x79\xb6\x2e\xc5\xe2\x9d\x5a\xd9\x22\xe7\x61\x88\xf2\x13\x39\xdf\x31\xf0\x14\x49\x47\xee\x8c\xd5\xc0\xf6\x9a\x23\x55\xd8\x57\xa4\xbb\x41\x3b\x1b\x36\xd2\x34\x9d\xad\x21\xac\xb9\xb6\x3a\x64\xe0\xc9\xc4\x3f\x45\x6a\xa5\xd1\xf6\xc2\xbe\xcd\xbf\xbd\xaf\x1a\x54\xde\x60\x78\xc3\x40\x1e\x7f\x60\x63\xe5\x71\xe4\x5a\x9a\x7e\x76\x9c\xf2\xcf\x1a\xd2\x15\x69\xe7\x14\x86\x7b\xfc\x3b\xcc\xb8\xb1\xbf\xd9\xa9\xcc\xf2\x48\x00\xca\x67\x00\x00\x00\xff\xff\x8d\xe9\x71\x20\x5a\x01\x00\x00")

func jobsJsonBytes() ([]byte, error) {
	return bindataRead(
		_jobsJson,
		"jobs.json",
	)
}

func jobsJson() (*asset, error) {
	bytes, err := jobsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "jobs.json", size: 346, mode: os.FileMode(420), modTime: time.Unix(1513950190, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _key_metadataJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\x3d\x6e\xc3\x30\x0c\x85\xf7\x9c\x82\xe0\x5c\x87\x35\xe2\xa5\x3a\x46\x6f\xc0\x28\xac\x23\x44\x91\x08\x8b\x1a\xdc\xc2\x77\x2f\x64\xd7\x8b\x8b\x8c\x7c\xfc\xde\xcf\xcf\x09\x00\x00\x9f\x62\x8c\x0e\xb6\x0b\x00\x3f\x6b\xba\x89\x7f\x74\x0f\x99\x3b\x9b\x55\xd0\x01\x6a\xbd\xc6\xe0\xf1\xed\xc8\xf8\x9c\x4c\x92\x75\x25\x7c\xaf\xdc\xe5\xe3\xf2\x1a\xda\xc3\x58\x35\x06\xcf\x16\x72\x22\x1d\xb5\x15\x15\x5c\x4d\xcb\xe6\xc5\x3a\xc5\x06\xde\xcd\xd4\x11\xdd\xc2\x98\x38\x9d\x63\xf6\x1c\xdd\x30\x0c\xef\xc4\x1a\xa8\xef\xa9\x58\x9e\x78\x14\x6a\x01\x64\x52\xac\x3f\x6b\xbd\xfe\x0d\xc0\xc4\xcf\xb5\xee\xdf\x63\xdf\xf1\x15\xa2\xec\x9a\xb2\xdd\x9b\x76\x88\x3a\x01\x2c\xbf\x01\x00\x00\xff\xff\x50\x13\x19\x35\x27\x01\x00\x00")

func key_metadataJsonBytes() ([]byte, error) {
	return bindataRead(
		_key_metadataJson,
		"key_metadata.json",
	)
}

func key_metadataJson() (*asset, error) {
	bytes, err := key_metadataJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "key_metadata.json", size: 295, mode: os.FileMode(420), modTime: time.Unix(1513923774, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _list_keysJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x53\xc1\x4e\xeb\x30\x10\xbc\xf7\x2b\x56\x7b\x7e\xa9\x1b\x35\xea\xa3\xf9\x0c\xae\x88\xc3\xd6\x59\x5a\x2b\x89\x6d\xd9\x1b\xa4\x50\xf5\xdf\x51\x42\x0a\xa1\x4a\xab\x16\x10\xe2\x64\x79\x77\x76\x67\x34\x63\xef\x67\x00\x00\x18\x38\xba\x26\x68\x8e\x98\xc3\x43\x5f\x02\xd8\x0f\x27\x00\xd6\x2c\x84\xf9\xa8\x02\x80\xf7\x8d\x2d\x58\x97\x49\xc9\x6d\x22\xad\x67\xcc\x01\x7d\x30\xcf\x24\x8c\xff\xa6\x80\xda\x59\x61\x2b\x49\x4d\xb1\xec\xc0\xc3\xfd\x32\x38\x9a\x97\x7e\x73\xba\xfa\xbf\xbe\x8c\x3c\x6a\x20\xef\x2b\xa3\x49\x8c\xb3\xca\x69\x61\x49\xa2\x04\xa6\x1a\xdf\x87\x0f\x1f\x7b\xb0\x09\x55\x37\xb4\x13\xf1\xb9\x52\x85\xd9\x5a\xb2\xf3\xca\x69\xaa\xf2\x2c\xcb\x16\x8a\xbc\x51\x69\xaa\xa2\xb8\x40\x5b\x56\x25\xb7\x51\x09\x47\x49\xe7\x9e\xeb\x91\x20\xb4\x54\xf7\xf4\x93\xcd\xa3\xb6\x27\x53\x8d\xcd\x41\x4f\xb2\xeb\xea\x27\x6b\x67\x27\x3a\xf7\xdf\xd3\x1b\x9b\x4d\x61\xc2\x94\x9e\xc2\x04\xd6\xe2\x42\x7b\x56\xd4\x30\x7b\x41\xd1\xd5\x6f\xa3\xd9\x54\x46\x5f\x97\xf6\x2a\x5b\xa4\xeb\xbb\xdb\xf3\xf6\x5b\xdf\x71\xc6\x9f\xcb\xba\x76\xb6\xe4\x36\x9d\xfb\x66\x33\x95\xf6\x99\xf6\x55\x79\x8f\x67\x7f\xd9\xdf\xe5\x7a\xf9\x17\xcc\x1d\x5e\xfc\xb4\xb5\x93\xcd\x5b\x3e\xd2\xc8\xd6\xfe\x7c\x7c\xc3\x7f\x45\xe9\x40\x75\xf6\xdf\x7c\xe2\xef\x58\x0f\xaf\x01\x00\x00\xff\xff\xc9\x7a\x4e\xe7\x58\x05\x00\x00")

func list_keysJsonBytes() ([]byte, error) {
	return bindataRead(
		_list_keysJson,
		"list_keys.json",
	)
}

func list_keysJson() (*asset, error) {
	bytes, err := list_keysJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "list_keys.json", size: 1368, mode: os.FileMode(420), modTime: time.Unix(1513922358, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _list_projectsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\x50\xa8\x06\x93\x0a\x0a\x4a\xa5\x45\x39\x4a\x56\x0a\x4a\xd1\x8e\x01\x9e\x0a\x1e\x45\xa9\x69\xb1\x4a\x3a\x30\xa9\xbc\xc4\xdc\x54\x90\x5c\x49\x6a\x71\x49\x41\x51\x7e\x56\x6a\x72\x09\x42\x32\x25\xb5\x38\xb9\x28\xb3\xa0\x24\x33\x3f\x0f\xa6\x46\x01\xa6\x08\xac\xa6\x96\x4b\x41\x21\x16\x10\x00\x00\xff\xff\x06\x3a\xd1\x87\x6d\x00\x00\x00")

func list_projectsJsonBytes() ([]byte, error) {
	return bindataRead(
		_list_projectsJson,
		"list_projects.json",
	)
}

func list_projectsJson() (*asset, error) {
	bytes, err := list_projectsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "list_projects.json", size: 109, mode: os.FileMode(420), modTime: time.Unix(1513971318, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _logstorageJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\xcc\x31\x0a\x02\x31\x10\x85\xe1\x7e\x4f\x31\x4c\x6d\x21\x08\x82\xdb\x89\x58\xba\x77\x88\xc9\x73\x09\x4c\x26\xab\x99\xa9\xc4\xbb\x5b\x18\x14\xdc\xf6\xfb\x79\xef\x39\x10\x11\x31\x34\x5c\x05\x89\x47\xb2\x87\x63\xf3\xc1\x45\x7c\xce\x3a\x85\x02\x1e\x89\xa7\xe3\xe5\xcc\xbd\x34\x8f\x11\x48\x48\xa7\xea\x6a\x3c\xd2\x6e\x7f\xe8\xe9\x16\xb2\xfc\x7c\xdb\xf5\xee\xf0\xb5\x5a\xb5\x20\xeb\x8b\xac\xb1\x96\x45\x60\xf8\x1f\x94\xdc\x5a\xd6\xf9\xcb\x03\xd1\xeb\x1d\x00\x00\xff\xff\xe9\xa3\xfc\xe5\xc2\x00\x00\x00")

func logstorageJsonBytes() ([]byte, error) {
	return bindataRead(
		_logstorageJson,
		"logstorage.json",
	)
}

func logstorageJson() (*asset, error) {
	bytes, err := logstorageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "logstorage.json", size: 194, mode: os.FileMode(420), modTime: time.Unix(1513916009, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _project_archive_export_asyncJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\x2a\xc9\xcf\x4e\xcd\x53\xb2\x52\x8a\x0e\xf1\xf7\x76\xf5\x8b\x55\xd2\x81\x08\x17\xa5\x26\xa6\x54\x2a\x59\xa5\x25\xe6\x14\xa7\x42\x85\x0a\x52\x8b\x92\x53\xf3\x4a\x12\xd3\x53\x95\xac\xcc\x4d\xb9\x6a\x01\x01\x00\x00\xff\xff\xe9\xc9\x98\x05\x41\x00\x00\x00")

func project_archive_export_asyncJsonBytes() ([]byte, error) {
	return bindataRead(
		_project_archive_export_asyncJson,
		"project_archive_export_async.json",
	)
}

func project_archive_export_asyncJson() (*asset, error) {
	bytes, err := project_archive_export_asyncJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "project_archive_export_async.json", size: 65, mode: os.FileMode(420), modTime: time.Unix(1513972080, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _project_archive_import_failedJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\xca\xcc\x2d\xc8\x2f\x2a\x89\x2f\x2e\x49\x2c\x29\x2d\x56\xb2\x52\x4a\x4b\xcc\xcc\x49\x4d\x51\xd2\x81\xc8\xa6\x16\x15\xe5\x17\x15\x2b\x59\x29\x44\x83\xf9\x60\x31\xaf\xfc\x24\x05\x47\x27\x67\x85\xe4\xfc\xd2\x9c\x14\x85\xbc\xfc\x12\x85\xa4\x54\x85\xb2\xc4\x9c\xcc\x94\xc4\x92\xd4\x14\x2b\x05\x3d\x3d\x3d\xa8\x76\xb8\xf2\x88\xc8\x28\xbc\xca\xc1\xaa\x63\x61\x76\x56\xa4\x26\x97\x96\x64\xe6\xe7\xc5\x63\xb3\xdd\x15\x26\xab\x60\x68\x64\x8c\x6a\x28\xc4\x2b\x58\x9c\x80\xd0\x63\x62\x6a\x86\x4f\x0f\x8a\x3b\x12\x93\x73\xb0\xba\x20\x2d\x33\x27\x55\x2f\x31\x39\xa7\x20\x3f\x27\x33\xb9\x92\xd8\x60\x00\xe9\x32\x22\x52\x1b\xc4\x19\x5c\xb5\x80\x00\x00\x00\xff\xff\x7a\x7d\x81\x25\xa3\x01\x00\x00")

func project_archive_import_failedJsonBytes() ([]byte, error) {
	return bindataRead(
		_project_archive_import_failedJson,
		"project_archive_import_failed.json",
	)
}

func project_archive_import_failedJson() (*asset, error) {
	bytes, err := project_archive_import_failedJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "project_archive_import_failed.json", size: 419, mode: os.FileMode(420), modTime: time.Unix(1513972247, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _project_archive_importJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\x56\xca\xcc\x2d\xc8\x2f\x2a\x89\x2f\x2e\x49\x2c\x29\x2d\x56\xb2\x52\x2a\x2e\x4d\x4e\x4e\x2d\x2e\x4e\x2b\xcd\x51\xaa\x05\x04\x00\x00\xff\xff\xb8\xb5\xf7\x27\x1e\x00\x00\x00")

func project_archive_importJsonBytes() ([]byte, error) {
	return bindataRead(
		_project_archive_importJson,
		"project_archive_import.json",
	)
}

func project_archive_importJson() (*asset, error) {
	bytes, err := project_archive_importJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "project_archive_import.json", size: 30, mode: os.FileMode(420), modTime: time.Unix(1513972292, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _project_infoJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xcd\x6e\xdb\x3c\x10\xbc\xe7\x29\x08\x9d\xbf\x50\xf1\xe7\x9b\x6f\x41\xe0\x22\x45\x8b\xa2\x40\x8f\x45\x51\xd0\xe4\xca\x5a\x9b\x22\xd9\xe5\x52\xb5\x51\xe4\xdd\x0b\xea\xc7\x4d\x63\x5b\x56\x4f\x86\xb1\xb3\xbb\xc3\x99\xd1\xfe\xba\x13\x42\x88\x22\x91\x2d\x56\xa2\xf8\xfa\xf8\xf9\xbd\x78\x26\xa8\xbe\x15\xff\xf5\x05\xa7\x1a\xc8\x15\x86\xc8\x81\xfc\x0e\x34\x8f\x25\x03\x51\x13\x06\x46\xef\x46\x84\x78\x03\xd1\xde\x55\xb8\x2d\x56\xa2\x5f\x23\x44\x41\x10\x7d\x22\x0d\x51\xf6\xbf\x72\x29\xf9\x18\xba\x15\x15\x5a\x18\x1a\x85\x28\x86\x49\x72\xe7\x37\x51\x6e\x13\xca\x2d\xf9\x14\xd6\x87\xa0\x9c\xf9\x08\x2d\x74\x7c\x17\xe7\xf8\x18\xeb\x7b\x95\xb8\x06\xc7\xa8\xd5\x48\x2e\x10\xb6\x8a\xe1\x03\x1c\xcf\x3b\xf2\xf0\xc6\xb3\x91\x06\x63\xb0\xea\xd8\xe3\xbb\xda\xb3\x6f\x5e\x51\xba\xc0\xbd\x7f\xa0\xdc\x82\x03\x52\x0c\xef\xd0\xc2\x63\x62\xdf\xa8\xbc\xdc\xda\x6e\x16\x53\x9a\x1a\xf2\xff\x38\x84\xb1\x01\x9f\x38\xb7\x2c\x1f\xe6\x6c\x45\xa7\x6d\x32\xf0\x05\xa8\x05\xfa\xe4\x0d\x9c\x6f\x8b\x40\x2d\x6a\x90\x99\xd8\x93\x0f\x08\x24\x0d\x54\x2a\x59\x96\x81\x7c\x8b\x06\x28\x37\x45\x4e\x9b\x89\x8d\x8b\x71\xa3\xf6\xc9\x75\x04\x17\x0f\xe7\x3a\x3a\x6f\xe0\x49\xe9\x1a\xa4\x81\x41\xc6\xe5\x24\x0c\x9c\xda\x58\x30\x9d\xf7\xca\xc6\x0b\xe6\x67\x6b\x08\x94\x69\xe0\xa6\x39\x63\x8b\xc1\x98\xa7\x4a\x38\x80\x4e\xd9\xfe\x38\x31\x3f\x87\x45\xfb\xa6\x51\xce\xdc\xbf\x92\xff\x02\xeb\xdb\x61\x7f\x33\x76\x0f\xc7\xa0\xb8\xce\xe0\xb2\x55\x54\x5a\xdc\x94\x94\x9c\x01\xbd\x2f\x33\xa0\x44\xf3\x9d\xa2\x9a\xa3\x7a\x20\xa8\xf0\x90\x27\x65\xed\xe6\x74\xb0\xda\xc6\x73\x5f\xc7\x30\xe4\xa8\xac\x3b\x79\xfc\x9c\x38\x9c\x8c\xbb\x7a\x0a\x26\x53\x5a\x79\x6a\x54\x27\xeb\x88\xd9\x45\xef\xae\x1b\x17\x75\x0d\x26\x59\xb8\x69\x9b\x73\xa0\xf9\x8a\x6d\x17\xa4\x19\xcf\xcc\x8d\xac\xff\xe1\x8d\x3d\x87\x92\x9b\x50\xe6\x3f\xf2\x6f\xde\xd7\x3b\x09\x7e\x24\xa4\xee\x18\xac\x0f\x18\xf9\x52\x02\xaf\x77\xff\x24\x64\xc8\x4a\xfc\xcb\xed\x18\xee\x77\xcd\x1c\x56\x65\x69\xbd\x56\xb6\xf6\x71\xca\x9f\x53\x56\x4e\x1f\xeb\xb4\x7c\x03\x3a\xa6\x6a\xc8\x62\xa5\xf6\xd3\xd4\x46\xc1\x33\xb7\x19\x4f\xd0\xf9\x26\x9c\xde\xdc\xe1\x5f\xee\x84\x78\xf9\x1d\x00\x00\xff\xff\x70\xb3\x91\x3c\xa2\x06\x00\x00")

func project_infoJsonBytes() ([]byte, error) {
	return bindataRead(
		_project_infoJson,
		"project_info.json",
	)
}

func project_infoJson() (*asset, error) {
	bytes, err := project_infoJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "project_info.json", size: 1698, mode: os.FileMode(420), modTime: time.Unix(1513971492, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xcd\x0e\x82\x40\x0c\x84\xef\x3c\xc5\x66\xce\x6e\xe2\xb9\x6f\xd3\xc5\x41\x89\x4a\x75\x7f\x12\xa2\xe1\xdd\x0d\x18\x75\x09\x1e\xe7\xeb\xd7\x76\x9e\x8d\x73\xce\x61\xb0\x03\xfd\xde\x77\x7a\x26\xe4\xcd\xbe\x7c\xd0\x2b\x21\x2b\x65\xf7\x33\x4e\x96\x72\x65\xcc\x71\xe3\x74\x66\x10\x04\x8d\x35\x0c\xfa\x80\xe0\x5e\xc6\x1a\x2e\x4f\x38\xb2\x2d\xd9\x22\x04\x29\x97\xb0\xba\xd4\x5f\xe8\x5b\xbb\xf5\xfc\x37\x2d\x89\xb1\xea\x32\xc7\x4d\x97\xac\xc7\xf4\x59\x5d\xe8\xd4\x4c\xaf\x00\x00\x00\xff\xff\x00\x58\x2a\x1e\x05\x01\x00\x00")

func resourceJsonBytes() ([]byte, error) {
	return bindataRead(
		_resourceJson,
		"resource.json",
	)
}

func resourceJson() (*asset, error) {
	bytes, err := resourceJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource.json", size: 261, mode: os.FileMode(420), modTime: time.Unix(1514273417, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourcesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\xd0\xbd\x4e\xc3\x30\x10\x07\xf0\x3d\x4f\x61\x65\x26\x55\xdb\x38\xfd\xda\x58\x98\x10\x03\x03\xbb\xe3\x5c\x5b\xab\x89\x5d\xce\x36\x2a\xa0\xbe\x3b\xba\xb6\xf9\x12\x45\x9e\xf1\x16\xdf\xff\x7c\xb9\x9f\xbf\x13\xc6\xd2\xda\x48\x51\xef\x8d\x75\xe9\x86\x51\x81\xb1\x54\x9b\x0a\xb4\x68\x20\xdd\x0c\xe3\x87\x6b\x48\xdf\x7f\x86\xc6\xbe\x01\x5a\x65\x34\xa5\x7c\xc2\x27\xd3\xac\xc8\xb3\x1d\x68\x40\x25\xfb\xa6\x27\xd1\xa8\xfa\x93\x7a\xbc\x56\xa7\xbe\xfe\x88\x72\x4f\x55\xd1\x54\x0b\xde\x96\x2b\xb0\x12\xd5\xd1\xdd\xa6\xbe\x7a\x5d\x81\x3c\x30\x0b\xf8\x01\xc8\x68\xd7\x7e\xc0\xcb\x6d\xb1\x67\xa5\x7d\x37\xd7\x5b\xc0\x76\x63\xbc\xde\x4e\x13\xc6\xce\x14\x5f\xac\xd9\x22\xdb\x8a\x03\xdc\x7f\x80\x61\xc3\x9d\x27\xa0\x98\xce\xa3\x86\xad\x31\x94\x95\x02\xdb\x4a\x29\xbe\xa8\xf2\xde\x6f\x75\x99\x0b\x27\x90\xde\x19\xa4\xcc\x3a\x5f\x76\x03\x54\x0d\x99\x34\x47\x05\xbf\xa2\xa1\x86\x66\xd0\x79\xf4\x73\x27\x76\xb6\xbb\x34\x76\xae\x43\xce\x75\x1c\xce\x59\xc8\x39\x8b\xc3\x99\x87\x9c\x79\x1c\xce\x69\xc8\x39\x8d\xc3\xc9\x43\x4e\x1e\x87\x73\x15\x72\xae\xe2\x70\xce\x43\xce\x79\x1c\xce\x22\xe4\x2c\xe2\x70\x2e\x43\xce\xe5\x7f\x76\x26\xe7\xe4\x27\x00\x00\xff\xff\xf2\xc8\x56\x6d\x12\x0a\x00\x00")

func resourcesJsonBytes() ([]byte, error) {
	return bindataRead(
		_resourcesJson,
		"resources.json",
	)
}

func resourcesJson() (*asset, error) {
	bytes, err := resourcesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resources.json", size: 2578, mode: os.FileMode(420), modTime: time.Unix(1514091476, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _systeminfoJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\x5d\x6b\xe3\x3a\x10\x7d\xef\xaf\x10\x7a\xba\x17\x1a\x47\xb2\xe5\x8f\x1a\x2e\x97\xee\xf6\xa1\xbb\x90\x6d\x21\x69\x59\xf6\xa5\xa8\xf6\x34\x51\xd7\x96\x84\x24\x87\x64\x97\xfc\xf7\xc5\x4e\xfc\x21\x12\x0a\xfb\x10\x92\xcc\x9c\x39\xe7\xcc\x78\xc6\xbf\xaf\x10\xc2\x76\x6f\x1d\xd4\x38\x47\xed\x3f\x84\xb0\x13\x35\x58\xc7\x6b\x3d\x84\x10\xc2\xa0\x55\xb1\xc1\x39\xa2\x2c\xa2\x37\x69\x1c\xa6\x59\x18\x92\xeb\x3e\xdb\x48\xe1\x70\x8e\x70\x6d\xf1\x10\x2b\xb9\x83\x96\xaa\x8d\x87\x84\xc6\x33\x12\xcf\x68\xb6\xa2\x59\x1e\xb3\x3c\xca\x7e\xe0\x0e\x78\x38\xe2\xb1\x69\x64\x09\xc5\xcf\xa9\xe4\x16\x8c\x15\x4a\x76\xf5\x41\x1c\x84\xb3\xe5\xb7\xdb\xc7\xe5\xfd\xc3\x6a\xd4\x78\x6d\x44\x55\x8e\x00\x72\x01\x22\x55\xd9\x59\xa8\x79\x59\x73\xe3\xc4\x9a\xcb\xa0\x52\x05\xaf\x26\x2c\xdc\x76\x90\xf9\x93\x05\x63\xe7\x6b\x03\xeb\xf9\xc9\x4f\x18\x8f\x30\xae\xc5\x68\x89\xb2\x21\x6e\xc1\x6c\xc1\x3c\x3d\x7d\xb9\xc3\x39\x92\x4d\x55\x79\x8d\xc1\x0e\x8a\xc6\x09\x25\x2d\xce\x87\xd6\x78\xe1\xc4\x16\x70\xee\x4c\x03\x03\xcf\x80\x5c\x74\x96\x7b\x90\xc7\xa6\xec\x74\x42\xdc\x74\xcf\x04\xef\xb2\xe4\x25\x61\x93\x9e\xf9\x71\xec\x0b\x5e\xa0\x87\x25\xfa\x3e\x66\x26\x33\xa5\x24\xa0\x24\x88\x7c\xfe\xf7\x6d\x3d\x15\xe8\x89\xbe\xf2\x2d\x47\xf7\xca\x2d\xb5\x72\xff\xac\x16\xff\xa2\x84\xcd\x3e\x09\x87\x96\x5d\xeb\xe8\x79\x31\x55\x90\xa5\x32\x6d\xd1\x83\xe1\x45\x05\xe8\xb3\x32\x5a\x19\xde\x36\x76\xd9\x47\x90\x06\xe4\x25\xa5\x63\x52\xd4\xba\x82\x1a\xa4\xeb\x8a\x9e\x27\x6b\xc0\x82\x94\xce\x5e\x09\xf5\x4d\x5b\xc7\x9d\x37\x97\x46\x9f\x16\xaf\x8f\xb4\xeb\xd8\x9c\x3c\xe4\x28\x66\x49\x9a\x26\xd7\x63\xee\xc2\xfa\xb6\xb4\x42\x16\x3e\xc9\xd9\x1d\xb0\x34\xa2\x8c\xb1\xeb\x29\xe2\x22\xd9\x87\xf7\xc0\xe2\x3c\xa2\xa7\x7b\xe8\xfa\x3a\xfd\x3a\x0c\x13\x29\x74\xe3\x77\x53\x29\x5e\xde\x6e\xc1\xf0\xf5\x99\xc3\x5e\x5f\x83\x29\x40\x3a\xdf\x04\x1f\x6a\xc2\x20\xc9\x6e\x58\x1c\xd1\x30\x1e\x85\x27\xdd\x6b\xa3\x0a\xb0\x56\x99\x76\xb2\xd9\x99\xa3\x1a\x6a\x65\xf6\xbe\xa9\x5e\xf9\x75\xef\x60\x3a\xc8\x9a\xef\x70\x8e\x52\x9a\xd0\x34\x65\x24\x9b\x64\xde\x0c\xb4\x5e\x68\x94\x25\x24\x21\x8c\x4c\x52\x4e\x39\x5e\xb5\x0f\x2b\x4c\x6f\xe2\x8c\xd0\xe4\xcc\x82\x2d\x36\x50\x36\x15\x18\xdf\x85\x69\xa4\x14\x72\x8d\x73\xe4\xd1\x6d\x0c\xf0\xf2\x51\xa9\x6a\x29\x7e\x75\x9a\xe4\x8c\xf0\x88\xb1\x3e\x5d\x7f\xaa\x28\xea\xe7\x74\xf0\x96\xaf\x06\x67\x44\xe1\xad\xdf\xc6\xc0\x5b\x3b\x87\x8d\x73\x3a\x9f\xcf\xcf\xde\x3c\x39\x63\x8c\xcc\x4f\x85\xfd\xf7\xff\xda\x80\x73\xfb\xff\xda\x57\xc2\x78\x0a\x85\x92\x0e\xa4\x5b\xed\x75\xb7\x37\x0e\x76\x6e\xfe\x6e\x95\xf4\x0f\xe0\x68\xfc\xae\xf1\x5f\xd9\x7f\x67\xa3\x6f\xfe\x43\x69\x5d\x71\xd1\x6b\x5f\xb5\x9f\xc3\x9f\x00\x00\x00\xff\xff\xf6\xcb\x8c\xa8\x42\x06\x00\x00")

func systeminfoJsonBytes() ([]byte, error) {
	return bindataRead(
		_systeminfoJson,
		"systeminfo.json",
	)
}

func systeminfoJson() (*asset, error) {
	bytes, err := systeminfoJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "systeminfo.json", size: 1602, mode: os.FileMode(420), modTime: time.Unix(1513915387, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tokenJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\x4d\x4b\xc3\x40\x10\x86\xef\xfd\x15\xc3\x9e\x5d\xe8\xce\xee\xba\x1f\xb7\x52\x2d\x78\xa9\x50\x1b\x8d\x8a\x48\xba\x99\x43\x5a\xe9\x86\xcd\x06\x45\xf1\xbf\x4b\x12\x02\x42\x4f\xc3\x3c\xbc\xef\x3c\xf3\xb3\x00\x00\x60\x7d\x47\x89\xf9\x69\x4a\x76\x35\xc1\x1c\x4f\x74\x1e\xe8\xe3\xf1\x74\x28\xf1\xbb\x58\x7d\x9e\xcb\xe3\xcd\xdd\x61\xf7\xbc\x69\x2d\xaa\xbc\xd1\x25\x6e\xcd\x93\x98\x0b\x4d\x3d\xa4\x83\x90\x35\x29\x6d\x78\x50\xe8\xb8\x52\xe6\x9a\xbb\x2a\xd4\x9c\x44\xb0\x8e\x64\x40\x87\x76\x6e\x84\x44\x55\x8e\x97\x6a\xfa\x6a\x9b\x54\xe5\x26\x8e\x7e\x5c\x0a\xc3\x97\x92\xa3\xda\xa3\xf0\xc2\x7a\xad\x5f\xe6\x64\x8a\x1f\xd4\x31\x0f\xaf\xe3\x0a\xc0\x8a\x87\xdb\xdd\xfb\x6a\xbd\xbe\x2f\xb6\x7b\x36\xc2\xb7\xff\x47\x69\xf8\x31\xa7\x9e\x16\x00\xbf\x7f\x01\x00\x00\xff\xff\xc8\x62\xfd\x56\xfe\x00\x00\x00")

func tokenJsonBytes() ([]byte, error) {
	return bindataRead(
		_tokenJson,
		"token.json",
	)
}

func tokenJson() (*asset, error) {
	bytes, err := tokenJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "token.json", size: 254, mode: os.FileMode(420), modTime: time.Unix(1513915486, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _tokensJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x92\xcf\x6a\xdc\x30\x10\x87\xef\x79\x0a\xe1\x73\x06\xa4\xd1\xc8\xd2\xf8\xb6\xb5\xdd\x63\x0b\xcd\x1f\xda\x84\xb0\xc8\xd2\x18\x16\x42\x1d\xec\x4d\x29\x94\xbe\x7b\x59\xaf\xdb\x6c\xa1\x18\xda\xa5\xe4\x22\xc1\xa7\x91\x34\xbf\x8f\xb9\xbf\x50\x4a\xa9\x6f\xf3\xaa\x54\xf1\x3c\xc9\x58\x54\xc7\xdd\x16\x97\x3f\xf1\x2e\x1f\xa0\x24\xf1\x2e\xa6\x00\xe8\xd9\x00\x11\x0a\x74\xc6\x33\x44\x66\xed\x73\xb0\x7d\xd6\xee\xe5\x4e\x1a\x25\xee\x87\x3f\xbd\x26\x5f\x9f\x76\x63\xdc\xef\x86\xcf\x87\x43\xd4\xc6\x83\xb6\x80\xee\x1a\x4d\x65\xca\xca\xe9\xbb\x97\xda\x71\x78\x94\xa9\xa8\xd4\xfd\x02\x94\x2a\x9a\xf6\x76\xcb\xfc\xab\x44\xa9\xe2\x6d\xdb\xd4\x0d\xba\x37\x50\x33\x39\xa0\xd0\x58\xe0\x80\x06\x36\x46\x37\x44\xce\xba\x76\x43\xc5\x52\xfe\xf0\x7b\x1b\x72\x48\xd6\xc7\xc7\x49\x66\xfc\xfd\xf2\x2f\x7c\xc4\x2e\x75\x9a\xcb\x1e\x92\xf4\x04\xe4\x4c\x84\x2e\x63\x07\x64\x31\x50\xb4\x7d\x8f\x31\x9f\xed\xc3\x57\x06\xd7\x7d\x5c\xdd\xd6\xdb\x8f\x9f\xee\x4e\x85\x64\xf9\x32\x3c\x4d\xa7\xe4\xf8\xe5\x7f\x70\xc0\xdc\xe5\x50\x66\xd0\x06\x1d\x90\xc4\x08\xdc\x99\x12\x52\xcc\x92\x89\x82\x23\x5f\xfe\x93\x83\x30\x3b\xa0\xc5\x01\x96\xeb\x0e\xe6\x1e\x5f\x7f\x22\x92\xb1\x59\xc8\x79\x48\x84\x0c\x44\xbe\x04\x8e\x29\x83\x98\x14\x58\x6c\x42\xc6\x70\xc6\x44\x1c\x6d\x84\xca\xb9\x75\x1b\x37\x57\xed\x87\xed\xa6\xae\xdf\xdf\xbc\xbb\x5e\x4b\xb9\x1f\x9f\x97\x90\x17\x4a\x3d\xfc\x08\x00\x00\xff\xff\xb7\xeb\xa0\x51\x0b\x04\x00\x00")

func tokensJsonBytes() ([]byte, error) {
	return bindataRead(
		_tokensJson,
		"tokens.json",
	)
}

func tokensJson() (*asset, error) {
	bytes, err := tokensJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "tokens.json", size: 1035, mode: os.FileMode(420), modTime: time.Unix(1513915451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _uploaded_job_input_filesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x90\xcf\x6e\x1b\x21\x10\x87\xef\x79\x0a\xc4\x39\x48\x30\xfc\x5b\xf6\x56\x27\xae\x94\x4b\x2e\x6d\x2e\xad\x7a\x18\x60\x48\xb7\xb2\x77\xad\x35\xae\xac\x56\x7e\xf7\x8a\x8d\xd3\x6c\x72\x42\x7c\xc3\x37\x33\xfc\xfe\xde\x30\xc6\x18\x3f\xe0\xf3\x30\x3e\xf3\x9e\xbd\xdc\x19\xe3\x53\x29\x47\xaa\xbc\x67\xf2\xf6\x15\xed\xf1\xcc\x7b\x06\x6f\xa0\x4e\x15\x77\xbc\x67\xea\x3f\x49\xd3\x69\x6c\x92\x5a\xc0\xe5\x85\xf3\x32\xec\xe8\xc8\x7b\xf6\xfd\xfa\xec\x75\x08\x63\x7c\xc8\xbc\x67\x5c\x82\x96\xd6\x13\x09\xa3\xba\x22\x4c\x46\x2f\x02\x92\x15\x24\x9d\xc5\x14\x14\x45\x8b\xfc\xf6\xcd\x3a\x1d\x69\x6e\x1e\xe6\xfd\x30\xae\x0b\x6d\xd2\x97\x8a\x95\x5a\xb5\xd2\xfe\xb0\x2e\x1e\x7f\x62\xc3\x01\x3a\x43\xd9\x94\xec\x0b\x29\x6d\x5c\x90\xc6\x59\x57\x34\x84\x1c\x5d\x4a\x26\x24\x49\x1e\xc9\xc6\x0e\x7c\x88\xa5\x68\x5f\x82\x8b\xc9\x51\xb4\x21\x22\xe6\x75\xcb\x5f\x53\x7c\x58\x7e\xe0\xa3\x2e\xa5\xd8\x20\x3c\x42\x16\x06\xb5\x12\x68\x23\x88\x9c\xc1\x29\xef\x53\x07\x3a\xad\xc5\x8c\x95\xee\x66\xc2\x4a\x8b\x0e\x52\x79\x21\x41\x80\xf9\x0a\xd0\x5b\xdf\x6b\xf8\xf6\x6e\x75\x9a\x7f\xd3\xfc\x38\x65\x7a\x7a\x7a\xb8\x6f\x86\x36\x60\x37\x2e\x28\xe1\xb5\x0a\xc2\x6c\xb7\x5b\xd1\x19\xb0\xe2\xb3\xb4\xfa\xce\x41\xb7\x31\x9b\x4f\x1f\x93\x79\xc4\x7d\x0b\x66\x3c\xed\x76\xeb\xde\xc3\x9f\x46\x15\xac\x18\x9d\x0f\xc3\x8c\x75\x98\xc6\xfb\x6b\x98\x1f\x36\xec\x7a\xf9\x7e\x43\x3a\x53\x5a\xa2\x68\xdd\xaf\xf8\xb2\x9c\x3f\x6e\x18\xbb\xfc\x0b\x00\x00\xff\xff\x49\x89\x78\x21\x68\x02\x00\x00")

func uploaded_job_input_filesJsonBytes() ([]byte, error) {
	return bindataRead(
		_uploaded_job_input_filesJson,
		"uploaded_job_input_files.json",
	)
}

func uploaded_job_input_filesJson() (*asset, error) {
	bytes, err := uploaded_job_input_filesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "uploaded_job_input_files.json", size: 616, mode: os.FileMode(420), modTime: time.Unix(1513951987, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _upload_job_input_fileJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x3d\x4f\xf3\x40\x10\x84\xfb\xfc\x0a\xcb\xf5\x7b\xd2\xdd\xde\xde\xc7\xba\x7b\xf3\x81\x94\x26\x0d\xa4\xa1\xdb\xf3\xed\x09\x23\x27\x41\x8e\x83\x10\x88\xff\x8e\x1c\x92\x40\x41\xb9\xb3\xf3\x8c\x66\xf7\x63\x56\x55\x55\x55\x67\x1e\x65\x31\x08\x8f\x92\xeb\xa6\xaa\x41\x9b\xa0\x34\x28\xc0\x07\x43\x8d\xd1\x8d\xb5\x8f\xf5\xbf\x6f\xab\xbc\x49\xbb\x9e\x5c\x10\xd0\xdc\xb4\x97\x6e\xe0\xb1\x3b\xec\x97\x3c\xca\x1f\x09\xa6\xd1\x3f\x09\xa5\xeb\x65\xc3\xbb\xc9\xb7\x3f\xf5\xfd\x2f\xf5\x7e\xbc\xe0\x59\x7a\x99\xba\x5c\x76\xdd\xb9\x55\xa1\xe8\xa2\xc7\xa4\x0a\x9b\xa4\x50\x34\x29\x2e\x81\x15\x5a\xe3\x84\x48\x47\x1b\xe0\x4a\x3c\x1f\xd2\xb9\x64\x1d\x92\x2d\xa5\x38\x52\x81\x21\x2b\x64\x6b\x14\xbb\x04\x2a\x67\xf0\x26\x84\x36\x82\x6d\xaf\xd0\x51\x86\x57\x19\x36\x87\x2c\xdb\xed\x7a\x39\xd1\x16\xc1\xcd\x3d\x19\x15\xac\x21\x85\xab\xd5\x4a\x45\x04\xa7\xee\xb4\xb3\x0b\x0f\x71\x8e\xf3\xff\x37\xfa\x89\x27\x84\x20\xa2\x64\x2c\x39\x14\x31\x16\x3d\x69\xf4\xce\x17\x0b\x94\x93\x6f\x5b\xa4\x56\x4b\x60\x71\x29\x42\xa0\x54\x8a\x0d\x85\x7c\x6a\xbd\x24\x47\x89\xf9\x76\xf3\xb1\x7b\x9f\x5e\x61\xe0\x32\x9f\x8e\x32\x4c\xf9\x9c\x77\xdd\xbe\x9e\x55\xd5\xe7\x57\x00\x00\x00\xff\xff\x56\x4f\xfc\x21\xbc\x01\x00\x00")

func upload_job_input_fileJsonBytes() ([]byte, error) {
	return bindataRead(
		_upload_job_input_fileJson,
		"upload_job_input_file.json",
	)
}

func upload_job_input_fileJson() (*asset, error) {
	bytes, err := upload_job_input_fileJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "upload_job_input_file.json", size: 444, mode: os.FileMode(420), modTime: time.Unix(1513919682, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _userJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\xca\xc9\x4f\xcf\xcc\x53\xb2\x52\x4a\x4c\xc9\xcd\xcc\x53\xd2\x81\x08\xa6\x65\x16\x15\x97\xf8\x25\xe6\xa6\x2a\x59\x29\x39\x22\x4b\xe4\x24\xc2\xc5\x7d\x93\x51\x64\x52\x73\x13\x33\x73\x60\xe6\x38\x14\xa7\x16\x95\xa5\x16\xe9\x25\xe7\xe7\x2a\x71\xd5\x02\x02\x00\x00\xff\xff\xb5\x0c\xc1\x4c\x6a\x00\x00\x00")

func userJsonBytes() ([]byte, error) {
	return bindataRead(
		_userJson,
		"user.json",
	)
}

func userJson() (*asset, error) {
	bytes, err := userJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "user.json", size: 106, mode: os.FileMode(420), modTime: time.Unix(1513967547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _usersJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xae\xe6\x52\x50\x50\x50\x50\xca\xc9\x4f\xcf\xcc\x53\xb2\x52\x2a\x2d\x4e\x2d\x52\xd2\x81\x88\xa5\x65\x16\x15\x97\xf8\x25\xe6\xa6\x2a\x59\x29\x81\x29\xa8\x78\x4e\x22\x5c\xd8\x07\xc6\x84\x4a\xa5\xe6\x26\x66\xe6\x40\x8d\x71\x28\x4e\x2d\x2a\x4b\x2d\xd2\x4b\xce\xcf\x55\xe2\xaa\xd5\xe1\x42\xb3\x29\x31\x25\x37\x33\x0f\x9b\x55\x8e\xc8\x12\x48\x76\xa1\x88\xc3\x2c\x02\x9b\x82\x6a\x53\x2c\x20\x00\x00\xff\xff\x40\xa2\x2f\x61\xd4\x00\x00\x00")

func usersJsonBytes() ([]byte, error) {
	return bindataRead(
		_usersJson,
		"users.json",
	)
}

func usersJson() (*asset, error) {
	bytes, err := usersJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "users.json", size: 212, mode: os.FileMode(420), modTime: time.Unix(1513915636, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _job_definitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xbd\x8e\xdb\x3c\x10\xec\xf5\x14\x53\x7c\x80\x8b\x0f\x4c\x22\x3b\x3e\x9c\xd9\xfb\x80\x34\x49\x91\x36\x0d\x45\xae\x28\x5e\x28\x92\xc7\x1f\x9f\x0f\x41\xde\x3d\x90\x44\x5b\x3e\x17\x41\x2a\x82\xfb\x33\x33\x3b\xbb\x0c\x8a\x92\x8c\x26\x64\xe3\x1d\x47\xb2\x44\x21\x41\xe0\x75\x30\x96\x1a\x80\xce\x24\xcb\x94\x3b\x3a\xd1\x59\x52\x1c\x39\x96\x29\xa1\xa3\x2f\x81\x23\x53\xca\x0d\x60\x14\x87\x6a\xbb\x43\xbf\x95\x2d\x53\x0f\xe2\x81\x7d\xde\x49\xc1\x1e\xe9\xd0\xb3\xc7\xfd\xbe\x3d\xa8\xbd\x68\x77\xdb\x5d\x03\x58\xaf\x2d\x9d\xc8\x72\x7c\xf9\xfa\xf4\xad\x01\xc6\x62\xb3\x09\x96\x8e\x17\xaa\x74\x25\x71\x62\xa4\x2a\x8a\x3d\xfb\x6e\x8a\x78\x45\x4f\xc6\x66\x8a\x47\x65\xf2\x24\x89\xa3\x17\x36\x4d\xd5\x3e\x2c\xdd\x0d\x70\x37\xd6\xe0\x5f\x61\xbd\xd3\xc8\x7e\x41\x6b\x80\x77\xe8\xd9\x8c\x34\xc7\x22\x69\x3a\x73\xfc\x50\xff\xd7\xef\x4b\x31\xf1\x66\x6c\xe0\x24\x6c\x21\x8e\x4d\xbb\xfd\xb4\x69\x80\x24\x07\x52\xc5\xd2\xbd\x3f\x89\x5e\x0a\x39\x49\x7c\x6e\x92\x7e\x1c\x85\x53\x69\xf9\x31\x48\xef\x7a\xa3\x4b\x14\xb3\xbe\x39\x78\x53\x56\x45\xe1\xbf\x5f\xcb\x48\x1f\xae\x1a\x7f\xd7\xd2\xc9\x86\xef\x99\xc2\x8d\x2e\x20\xbf\x05\xe2\xb0\x5e\x0a\x3b\xad\xad\x52\x3d\xfb\x2e\x52\xbf\x72\xd4\xc5\xf9\x3c\x50\x4c\x1f\xf3\x60\x9c\x4e\xd7\xe4\x62\x89\x70\x73\xb6\x5a\x7e\xcf\xb8\x99\x28\x37\x7f\x1f\x84\xce\xc1\xc7\xcc\xeb\x7b\x12\xf1\x9e\xfe\x24\xe2\xca\x5a\x2d\x4d\x4e\xc4\xbe\x06\xdf\xad\x6f\x41\x81\xb6\xbe\x13\x16\x2b\xda\xaa\xe9\x72\x02\xab\x0d\x4b\x0f\xbb\x14\xff\x24\x0a\xda\x1b\xa7\x6f\x6b\x53\x8e\x22\x93\x7e\xe3\x33\x12\xeb\x4d\x9c\x8f\xb9\x94\x7f\x3e\xe7\x3f\x01\x00\x00\xff\xff\xff\xf9\xb5\xf6\x3f\x03\x00\x00")

func job_definitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_job_definitionYaml,
		"job_definition.yaml",
	)
}

func job_definitionYaml() (*asset, error) {
	bytes, err := job_definitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "job_definition.yaml", size: 831, mode: os.FileMode(420), modTime: time.Unix(1514051391, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _execution_outputTxt = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x90\x41\x4b\x03\x41\x0c\x85\xef\xfd\x15\x8f\x9e\x14\x4b\xd1\xe2\x69\x60\x4f\x6d\x85\x1e\xb4\x47\x0f\xa5\x87\xb8\x9b\xb5\x53\xd3\xc9\x92\xc9\x68\xa5\xf4\xbf\xcb\x96\x45\xfd\x03\x82\xb7\x47\x42\xbe\xf7\x5e\x76\x2c\xa2\xa3\x07\x8a\xc2\x4d\xc0\x6a\xdd\xab\x62\x1c\xb0\xa7\x77\x9a\x46\x9d\xae\xd6\xcb\x63\xcd\x9d\x47\x4d\x01\x73\x4a\x49\x1d\x56\x12\x3a\xd3\x57\xa3\x03\xc6\xad\xda\x38\x80\xcd\xd4\xaa\xd9\x04\x4f\x8a\x5c\xea\x1d\xda\x28\x0c\x35\x34\xd1\xb8\x76\xb5\xcf\xd1\xf2\xc8\x75\xe9\x39\x68\x07\xbb\xd9\x2d\xe2\x85\xb4\xe7\xda\xe1\x9c\x7d\xd0\x01\x9b\x67\xb5\xb7\x56\xf4\x03\xc6\xb9\x88\x07\x4c\x90\x9d\xbb\xcb\x6d\x31\xce\x01\xa7\xfb\x6a\x11\x73\x47\xde\xbb\x5d\x88\xd0\x84\x3b\x24\x6d\xfa\xf5\x46\xb4\x26\xd9\x69\xf6\xbf\xed\x85\x1b\x9c\x1a\x72\x9a\x6b\x72\x3e\x7a\xf5\x58\xc4\xe3\xe2\x67\xb0\x3a\x74\x72\x75\xa0\xae\x3a\x9d\x27\x78\xa1\xcc\x55\x2a\x22\xd7\x67\x6c\xcf\x3d\xb5\xe1\xdf\x95\xbe\x33\x57\x9b\x7f\x9b\x39\x3b\x79\xc9\x61\xf8\xf9\x76\xf4\x15\x00\x00\xff\xff\xf3\xaa\xc1\x28\x43\x02\x00\x00")

func execution_outputTxtBytes() ([]byte, error) {
	return bindataRead(
		_execution_outputTxt,
		"execution_output.txt",
	)
}

func execution_outputTxt() (*asset, error) {
	bytes, err := execution_outputTxtBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "execution_output.txt", size: 579, mode: os.FileMode(420), modTime: time.Unix(1514270676, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"acl.json": aclJson,
	"bulk_delete_executions.json": bulk_delete_executionsJson,
	"bulk_job_delete.json": bulk_job_deleteJson,
	"bulk_toggle_execution.json": bulk_toggle_executionJson,
	"bulk_toggle_schedule.json": bulk_toggle_scheduleJson,
	"config_item.json": config_itemJson,
	"execution_adhoc.json": execution_adhocJson,
	"execution_input_files.json": execution_input_filesJson,
	"execution.json": executionJson,
	"executions.json": executionsJson,
	"execution_state.json": execution_stateJson,
	"failed_acl_validation.json": failed_acl_validationJson,
	"history.json": historyJson,
	"imported_job.json": imported_jobJson,
	"incomplete_logstorage_executions.json": incomplete_logstorage_executionsJson,
	"job_info.json": job_infoJson,
	"job_metadata.json": job_metadataJson,
	"job_option_upload.json": job_option_uploadJson,
	"jobs.json": jobsJson,
	"key_metadata.json": key_metadataJson,
	"list_keys.json": list_keysJson,
	"list_projects.json": list_projectsJson,
	"logstorage.json": logstorageJson,
	"project_archive_export_async.json": project_archive_export_asyncJson,
	"project_archive_import_failed.json": project_archive_import_failedJson,
	"project_archive_import.json": project_archive_importJson,
	"project_info.json": project_infoJson,
	"resource.json": resourceJson,
	"resources.json": resourcesJson,
	"systeminfo.json": systeminfoJson,
	"token.json": tokenJson,
	"tokens.json": tokensJson,
	"uploaded_job_input_files.json": uploaded_job_input_filesJson,
	"upload_job_input_file.json": upload_job_input_fileJson,
	"user.json": userJson,
	"users.json": usersJson,
	"job_definition.yaml": job_definitionYaml,
	"execution_output.txt": execution_outputTxt,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"acl.json": &bintree{aclJson, map[string]*bintree{}},
	"bulk_delete_executions.json": &bintree{bulk_delete_executionsJson, map[string]*bintree{}},
	"bulk_job_delete.json": &bintree{bulk_job_deleteJson, map[string]*bintree{}},
	"bulk_toggle_execution.json": &bintree{bulk_toggle_executionJson, map[string]*bintree{}},
	"bulk_toggle_schedule.json": &bintree{bulk_toggle_scheduleJson, map[string]*bintree{}},
	"config_item.json": &bintree{config_itemJson, map[string]*bintree{}},
	"execution.json": &bintree{executionJson, map[string]*bintree{}},
	"execution_adhoc.json": &bintree{execution_adhocJson, map[string]*bintree{}},
	"execution_input_files.json": &bintree{execution_input_filesJson, map[string]*bintree{}},
	"execution_output.txt": &bintree{execution_outputTxt, map[string]*bintree{}},
	"execution_state.json": &bintree{execution_stateJson, map[string]*bintree{}},
	"executions.json": &bintree{executionsJson, map[string]*bintree{}},
	"failed_acl_validation.json": &bintree{failed_acl_validationJson, map[string]*bintree{}},
	"history.json": &bintree{historyJson, map[string]*bintree{}},
	"imported_job.json": &bintree{imported_jobJson, map[string]*bintree{}},
	"incomplete_logstorage_executions.json": &bintree{incomplete_logstorage_executionsJson, map[string]*bintree{}},
	"job_definition.yaml": &bintree{job_definitionYaml, map[string]*bintree{}},
	"job_info.json": &bintree{job_infoJson, map[string]*bintree{}},
	"job_metadata.json": &bintree{job_metadataJson, map[string]*bintree{}},
	"job_option_upload.json": &bintree{job_option_uploadJson, map[string]*bintree{}},
	"jobs.json": &bintree{jobsJson, map[string]*bintree{}},
	"key_metadata.json": &bintree{key_metadataJson, map[string]*bintree{}},
	"list_keys.json": &bintree{list_keysJson, map[string]*bintree{}},
	"list_projects.json": &bintree{list_projectsJson, map[string]*bintree{}},
	"logstorage.json": &bintree{logstorageJson, map[string]*bintree{}},
	"project_archive_export_async.json": &bintree{project_archive_export_asyncJson, map[string]*bintree{}},
	"project_archive_import.json": &bintree{project_archive_importJson, map[string]*bintree{}},
	"project_archive_import_failed.json": &bintree{project_archive_import_failedJson, map[string]*bintree{}},
	"project_info.json": &bintree{project_infoJson, map[string]*bintree{}},
	"resource.json": &bintree{resourceJson, map[string]*bintree{}},
	"resources.json": &bintree{resourcesJson, map[string]*bintree{}},
	"systeminfo.json": &bintree{systeminfoJson, map[string]*bintree{}},
	"token.json": &bintree{tokenJson, map[string]*bintree{}},
	"tokens.json": &bintree{tokensJson, map[string]*bintree{}},
	"upload_job_input_file.json": &bintree{upload_job_input_fileJson, map[string]*bintree{}},
	"uploaded_job_input_files.json": &bintree{uploaded_job_input_filesJson, map[string]*bintree{}},
	"user.json": &bintree{userJson, map[string]*bintree{}},
	"users.json": &bintree{usersJson, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

